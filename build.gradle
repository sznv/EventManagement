apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

jar {
	baseName = 'event-service'
	version = '0.0.1-SNAPSHOT'
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
    }
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs 'src/integrationTest/java'
        }
        resources {
            srcDirs 'src/integrationTest/resources'
        }
    }
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


dependencies {
    //Spring libraries
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    //Jackson
    compile ('com.fasterxml.jackson.core:jackson-core:2.6.2')
    compile ('com.fasterxml.jackson.core:jackson-databind:2.6.2')

    //Database
    compile 'mysql:mysql-connector-java:5.1.38'

    //Spock & Spring-test
    testCompile ('org.springframework.boot:spring-boot-test:1.4.1.RELEASE')
    testCompile ('org.spockframework:spock-core:1.1-groovy-2.4-rc-3')
    testCompile ('org.spockframework:spock-spring:1.1-groovy-2.4-rc-3')

    testCompile('com.h2database:h2')
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
